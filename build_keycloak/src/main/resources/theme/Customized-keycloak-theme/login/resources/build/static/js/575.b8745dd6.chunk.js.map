{"version":3,"file":"static/js/575.b8745dd6.chunk.js","mappings":"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","sources":["login/pages/Login.tsx","../node_modules/keycloakify/src/lib/useGetClassName.ts","../node_modules/keycloakify/src/login/lib/useGetClassName.ts","../node_modules/keycloakify/src/tools/clsx.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/tsafe/src/typeGuard.ts"],"sourcesContent":["// ejected using 'npx eject-keycloak-page'\nimport { useState, type FormEventHandler } from \"react\";\nimport { clsx } from \"keycloakify/tools/clsx\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\n\nimport mintCampusLogo from \"../../assets/MINT-Campus-Logo.png\";\nimport mintVernetztLogo from \"../../assets/Mintvernetzt-Logo.png\";\n\nexport default function Login(props: PageProps<Extract<KcContext, { pageId: \"login.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { getClassName } = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const { social, realm, url, usernameEditDisabled, login, auth, registrationDisabled } = kcContext;\n\n    const { msg, msgStr } = i18n;\n\n    const [isLoginButtonDisabled, setIsLoginButtonDisabled] = useState(false);\n\n    const onSubmit = useConstCallback<FormEventHandler<HTMLFormElement>>(e => {\n        e.preventDefault();\n\n        setIsLoginButtonDisabled(true);\n\n        const formElement = e.target as HTMLFormElement;\n\n        //NOTE: Even if we login with email Keycloak expect username and password in\n        //the POST request.\n        formElement.querySelector(\"input[name='email']\")?.setAttribute(\"name\", \"username\");\n\n        formElement.submit();\n    });\n\n    return (\n        <>\n            <Template\n                {...{ kcContext, i18n, doUseDefaultCss, classes }}\n                displayInfo={social.displayInfo}\n                displayWide={realm.password && social.providers !== undefined}\n                headerNode={msgStr(\"loginTitle\")}\n                infoNode={\n                    realm.password &&\n                    realm.registrationAllowed &&\n                    !registrationDisabled && (\n                        <div id=\"kc-registration\">\n                            <span>\n                                {msg(\"noAccount\")}\n                                <a className=\"kc-link registerLink\" tabIndex={6} href={url.registrationUrl}>\n                                    {msg(\"doRegister\")}\n                                </a>\n                            </span>\n                        </div>\n                    )\n                }\n            >\n                <div id=\"kc-form\" className={clsx(realm.password && social.providers !== undefined && getClassName(\"kcContentWrapperClass\"))}>\n                    <div\n                        id=\"kc-form-wrapper\"\n                        className={clsx(\n                            realm.password &&\n                            social.providers && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                        )}\n                    >\n                        {realm.password && (\n                            <form id=\"kc-form-login\" onSubmit={onSubmit} action={url.loginAction} method=\"post\">\n                                <div className={getClassName(\"kcFormGroupClass\")}>\n                                    {(() => {\n                                        const label = !realm.loginWithEmailAllowed\n                                            ? \"username\"\n                                            : realm.registrationEmailAsUsername\n                                                ? \"email\"\n                                                : \"usernameOrEmail\";\n\n                                        const autoCompleteHelper: typeof label = label === \"usernameOrEmail\" ? \"username\" : label;\n\n                                        return (\n                                            <input\n                                                tabIndex={1}\n                                                id={autoCompleteHelper}\n                                                className={getClassName(\"kcInputClass\")}\n                                                defaultValue={login.username ?? \"\"}\n                                                //NOTE: This is used by Google Chrome auto fill so we use it to tell\n                                                //the browser how to pre fill the form but before submit we put it back\n                                                //to username because it is what keycloak expects.\n                                                name={autoCompleteHelper}\n                                                placeholder={msgStr(label) + '*'}\n                                                required\n                                                type=\"text\"\n                                                {...(usernameEditDisabled\n                                                    ? { \"disabled\": true }\n                                                    : {\n                                                        \"autoFocus\": true,\n                                                        \"autoComplete\": \"off\"\n                                                    })}\n                                            />\n                                        );\n                                    })()}\n                                </div>\n                                <div className={getClassName(\"kcFormGroupClass\")}>\n                                    <input\n                                        tabIndex={2}\n                                        autoComplete=\"off\"\n                                        id=\"password\"\n                                        className={getClassName(\"kcInputClass\")}\n                                        name=\"password\"\n                                        placeholder={msgStr(\"password\") + '*'}\n                                        required\n                                        type=\"password\"\n                                    />\n                                </div>\n                                <div className={clsx(getClassName(\"kcFormGroupClass\"), getClassName(\"kcFormSettingClass\"))}>\n                                    {realm.rememberMe && !usernameEditDisabled && (\n                                        <div id=\"kc-form-options\">\n                                            <div className=\"checkbox\">\n                                                <label>\n                                                    <input\n                                                        tabIndex={3}\n                                                        id=\"rememberMe\"\n                                                        name=\"rememberMe\"\n                                                        type=\"checkbox\"\n                                                        {...(login.rememberMe\n                                                            ? {\n                                                                \"checked\": true\n                                                            }\n                                                            : {})}\n                                                    />\n                                                    {msg(\"rememberMe\")}\n                                                </label>\n                                            </div>\n                                        </div>\n                                    )}\n                                    {realm.resetPasswordAllowed && (\n                                        <div className={getClassName(\"kcFormOptionsWrapperClass\")}>\n                                            <span>\n                                                <a className=\"kc-link resetPassword\" tabIndex={5} href={url.loginResetCredentialsUrl}>\n                                                    {msg(\"doForgotPassword\")}\n                                                </a>\n                                            </span>\n                                        </div>\n                                    )}\n                                </div>\n                                <div id=\"kc-form-buttons\" className={getClassName(\"kcFormGroupClass\")}>\n                                    <input\n                                        type=\"hidden\"\n                                        id=\"id-hidden-input\"\n                                        name=\"credentialId\"\n                                        {...(auth?.selectedCredential !== undefined\n                                            ? {\n                                                \"value\": auth.selectedCredential\n                                            }\n                                            : {})}\n                                    />\n                                    <button\n                                        className={clsx(\n                                            getClassName(\"kcButtonClass\"),\n                                            getClassName(\"kcButtonPrimaryClass\"),\n                                        )}\n                                        name=\"login\"\n                                        id=\"kc-login\"\n                                        type=\"submit\"\n                                        disabled={isLoginButtonDisabled}\n                                    >\n                                        {msgStr(\"doLogIn\")}\n                                    </button>\n                                    <button\n                                        className={clsx(\n                                            getClassName(\"kcButtonClass\"),\n                                            getClassName(\"kcButtonDefaultClass\"),\n                                        )}\n                                        onClick={() => window.history.back()}\n                                    >\n                                        {msgStr(\"doCancel\")}\n                                    </button>\n                                </div>\n                            </form>\n                        )}\n                    </div>\n                    {realm.password && social.providers !== undefined && (\n                        <div\n                            id=\"kc-social-providers\"\n                            className={clsx(getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\"))}\n                        >\n                            <ul\n                                className={clsx(\n                                    getClassName(\"kcFormSocialAccountListClass\"),\n                                    social.providers.length > 4 && getClassName(\"kcFormSocialAccountDoubleListClass\")\n                                )}\n                            >\n                                {social.providers.map(p => (\n                                    <li key={p.providerId} className={getClassName(\"kcFormSocialAccountListLinkClass\")}>\n                                        <a href={p.loginUrl} id={`zocial-${p.alias}`} className={clsx(\"zocial\", p.providerId)}>\n                                            <span>{p.displayName}</span>\n                                        </a>\n                                    </li>\n                                ))}\n                            </ul>\n                        </div>\n                    )}\n                </div>\n            </Template>\n            {/* <div className=\"kcRegisterBanner\">\n                <span>{msgStr(\"registerBanner\")}</span>\n                <div style={{ display: 'flex', gap: '23px', alignItems: 'center', justifyContent: 'center', marginTop: '30px', marginBottom: '30px' }}>\n                    <img src={mintVernetztLogo} alt=\"mint-vernetzt\" />\n                    <img src={mintCampusLogo} alt=\"mint-campus\" />\n                </div>\n            </div> */}\n        </>\n    );\n}\n","import { clsx } from \"keycloakify/tools/clsx\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\n\nexport function createUseClassName<ClassKey extends string>(params: { defaultClasses: Record<ClassKey, string | undefined> }) {\n    const { defaultClasses } = params;\n\n    function useGetClassName(params: { doUseDefaultCss: boolean; classes: Partial<Record<ClassKey, string>> | undefined }) {\n        const { classes } = params;\n\n        const getClassName = useConstCallback((classKey: ClassKey): string => {\n            return clsx(classKey, defaultClasses[classKey], classes?.[classKey]);\n        });\n\n        return { getClassName };\n    }\n\n    return { useGetClassName };\n}\n","import { createUseClassName } from \"keycloakify/lib/useGetClassName\";\nimport type { ClassKey } from \"keycloakify/login/TemplateProps\";\n\nexport const { useGetClassName } = createUseClassName<ClassKey>({\n    \"defaultClasses\": {\n        \"kcHtmlClass\": \"login-pf\",\n        \"kcLoginClass\": \"login-pf-page\",\n        \"kcContentWrapperClass\": \"row\",\n        \"kcHeaderClass\": \"login-pf-page-header\",\n        \"kcHeaderWrapperClass\": undefined,\n        \"kcFormCardClass\": \"card-pf\",\n        \"kcFormCardAccountClass\": \"login-pf-accounts\",\n        \"kcFormSocialAccountClass\": \"login-pf-social-section\",\n        \"kcFormSocialAccountContentClass\": \"col-xs-12 col-sm-6\",\n        \"kcFormHeaderClass\": \"login-pf-header\",\n        \"kcLocaleWrapperClass\": undefined,\n        \"kcFeedbackErrorIcon\": \"pficon pficon-error-circle-o\",\n        \"kcFeedbackWarningIcon\": \"pficon pficon-warning-triangle-o\",\n        \"kcFeedbackSuccessIcon\": \"pficon pficon-ok\",\n        \"kcFeedbackInfoIcon\": \"pficon pficon-info\",\n        \"kcResetFlowIcon\": \"pficon pficon-arrow fa-2x\",\n        \"kcFormGroupClass\": \"form-group\",\n        \"kcLabelWrapperClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcSignUpClass\": \"login-pf-signup\",\n        \"kcInfoAreaWrapperClass\": undefined,\n\n        \"kcLogoClass\": \"login-pf-brand\",\n        \"kcContainerClass\": \"container-fluid\",\n        \"kcContentClass\": \"col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 col-lg-6 col-lg-offset-3\",\n        \"kcFeedbackAreaClass\": \"col-md-12\",\n        \"kcLocaleClass\": \"col-xs-12 col-sm-1\",\n        \"kcAlertIconClasserror\": \"pficon pficon-error-circle-o\",\n\n        \"kcFormAreaClass\": \"col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2 col-lg-8 col-lg-offset-2\",\n        \"kcFormSocialAccountListClass\": \"login-pf-social list-unstyled login-pf-social-all\",\n        \"kcFormSocialAccountDoubleListClass\": \"login-pf-social-double-col\",\n        \"kcFormSocialAccountListLinkClass\": \"login-pf-social-link\",\n        \"kcWebAuthnKeyIcon\": \"pficon pficon-key\",\n        \"kcWebAuthnDefaultIcon\": \"pficon pficon-key\",\n\n        \"kcFormClass\": \"form-horizontal\",\n        \"kcFormGroupErrorClass\": \"has-error\",\n        \"kcLabelClass\": \"control-label\",\n        \"kcInputClass\": \"form-control\",\n        \"kcInputErrorMessageClass\": \"pf-c-form__helper-text pf-m-error required kc-feedback-text\",\n        \"kcInputWrapperClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormOptionsClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormButtonsClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormSettingClass\": \"login-pf-settings\",\n        \"kcTextareaClass\": \"form-control\",\n\n        \"kcInfoAreaClass\": \"col-xs-12 col-sm-4 col-md-4 col-lg-5 details\",\n\n        // user-profile grouping\n        \"kcFormGroupHeader\": \"pf-c-form__group\",\n\n        // css classes for form buttons main class used for all buttons\n        \"kcButtonClass\": \"btn\",\n        // classes defining priority of the button - primary or default (there is typically only one priority button for the form)\n        \"kcButtonPrimaryClass\": \"btn-primary\",\n        \"kcButtonDefaultClass\": \"btn-default\",\n        // classes defining size of the button\n        \"kcButtonLargeClass\": \"btn-lg\",\n        \"kcButtonBlockClass\": \"btn-block\",\n\n        // css classes for input\n        \"kcInputLargeClass\": \"input-lg\",\n\n        // css classes for form accessability\n        \"kcSrOnlyClass\": \"sr-only\",\n\n        // css classes for select-authenticator form\n        \"kcSelectAuthListClass\": \"list-group list-view-pf\",\n        \"kcSelectAuthListItemClass\": \"list-group-item list-view-pf-stacked\",\n        \"kcSelectAuthListItemFillClass\": \"pf-l-split__item pf-m-fill\",\n        \"kcSelectAuthListItemIconPropertyClass\": \"fa-2x select-auth-box-icon-properties\",\n        \"kcSelectAuthListItemIconClass\": \"pf-l-split__item select-auth-box-icon\",\n        \"kcSelectAuthListItemTitle\": \"select-auth-box-paragraph\",\n        \"kcSelectAuthListItemInfoClass\": \"list-view-pf-main-info\",\n        \"kcSelectAuthListItemLeftClass\": \"list-view-pf-left\",\n        \"kcSelectAuthListItemBodyClass\": \"list-view-pf-body\",\n        \"kcSelectAuthListItemDescriptionClass\": \"list-view-pf-description\",\n        \"kcSelectAuthListItemHeadingClass\": \"list-group-item-heading\",\n        \"kcSelectAuthListItemHelpTextClass\": \"list-group-item-text\",\n\n        // css classes for the authenticators\n        \"kcAuthenticatorDefaultClass\": \"fa list-view-pf-icon-lg\",\n        \"kcAuthenticatorPasswordClass\": \"fa fa-unlock list-view-pf-icon-lg\",\n        \"kcAuthenticatorOTPClass\": \"fa fa-mobile list-view-pf-icon-lg\",\n        \"kcAuthenticatorWebAuthnClass\": \"fa fa-key list-view-pf-icon-lg\",\n        \"kcAuthenticatorWebAuthnPasswordlessClass\": \"fa fa-key list-view-pf-icon-lg\",\n\n        //css classes for the OTP Login Form\n        \"kcSelectOTPListClass\": \"card-pf card-pf-view card-pf-view-select card-pf-view-single-select\",\n        \"kcSelectOTPListItemClass\": \"card-pf-body card-pf-top-element\",\n        \"kcAuthenticatorOtpCircleClass\": \"fa fa-mobile card-pf-icon-circle\",\n        \"kcSelectOTPItemHeadingClass\": \"card-pf-title text-center\",\n        \"kcFormOptionsWrapperClass\": undefined\n    }\n});\n","import { assert } from \"tsafe/assert\";\nimport { typeGuard } from \"tsafe/typeGuard\";\n\nexport type CxArg = undefined | null | string | boolean | Partial<Record<string, boolean | null | undefined>> | readonly CxArg[];\n\nexport const clsx = (...args: CxArg[]): string => {\n    const len = args.length;\n    let i = 0;\n    let cls = \"\";\n    for (; i < len; i++) {\n        const arg = args[i];\n        if (arg == null) continue;\n\n        let toAdd;\n        switch (typeof arg) {\n            case \"boolean\":\n                break;\n            case \"object\": {\n                if (Array.isArray(arg)) {\n                    toAdd = clsx(...arg);\n                } else {\n                    assert(!typeGuard<{ length: number }>(arg, false));\n\n                    toAdd = \"\";\n                    for (const k in arg) {\n                        if (arg[k as string] && k) {\n                            toAdd && (toAdd += \" \");\n                            toAdd += k;\n                        }\n                    }\n                }\n                break;\n            }\n            default: {\n                toAdd = arg;\n            }\n        }\n        if (toAdd) {\n            cls && (cls += \" \");\n            cls += toAdd;\n        }\n    }\n    return cls;\n};\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/** https://docs.tsafe.dev/typeguard */\nexport function typeGuard<T>(_value: any, isMatched: boolean): _value is T {\n    return isMatched;\n}\n"],"names":["Login","props","kcContext","i18n","doUseDefaultCss","Template","classes","getClassName","useGetClassName","social","realm","url","usernameEditDisabled","login","auth","registrationDisabled","msg","msgStr","_useState","useState","_useState2","_slicedToArray","isLoginButtonDisabled","setIsLoginButtonDisabled","onSubmit","useConstCallback","e","_formElement$querySel","preventDefault","formElement","target","querySelector","setAttribute","submit","_jsx","_Fragment","children","displayInfo","displayWide","password","undefined","providers","headerNode","infoNode","registrationAllowed","id","_jsxs","className","tabIndex","href","registrationUrl","clsx","action","loginAction","method","_login$username","label","loginWithEmailAllowed","registrationEmailAsUsername","autoCompleteHelper","_objectSpread","defaultValue","username","name","placeholder","required","type","autoComplete","rememberMe","resetPasswordAllowed","loginResetCredentialsUrl","selectedCredential","disabled","onClick","window","history","back","length","map","p","loginUrl","concat","alias","providerId","displayName","createUseClassName","params","defaultClasses","classKey","len","arguments","i","cls","arg","toAdd","Array","isArray","apply","_toConsumableArray","k","assert","typeGuard","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","_objectSpread2","source","forEach","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","input","hint","prim","Symbol","toPrimitive","res","call","TypeError","String","Number","_value","isMatched"],"sourceRoot":""}