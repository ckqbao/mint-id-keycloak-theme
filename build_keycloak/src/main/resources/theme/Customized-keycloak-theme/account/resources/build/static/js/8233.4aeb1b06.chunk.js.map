{"version":3,"file":"static/js/8233.4aeb1b06.chunk.js","mappings":"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","sources":["account/components/Sidebar.tsx","account/Template.tsx"],"sourcesContent":["import { Fragment } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { XMarkIcon } from '@heroicons/react/24/outline'\nimport { clsx } from 'keycloakify/tools/clsx'\nimport { KcContext } from 'account/kcContext'\nimport { I18n } from 'account/i18n'\n\nimport mintCampusLogo from '../../assets/img/MINT-Campus-Logo.png'\nimport mintVernetztLogo from '../../assets/img/Mintvernetzt-Logo.png'\n\ntype SidebarProps = {\n  active: string\n  i18n: I18n\n  kcContext: KcContext\n  onClose: () => void\n  open: boolean\n}\n\nexport default function Sidebar(props: SidebarProps) {\n  const { active, i18n, kcContext, onClose, open } = props\n\n  const { url, features, realm } = kcContext\n\n  const { msg } = i18n\n\n  return (\n    <>\n      <Transition.Root show={open} as={Fragment}>\n        <Dialog as=\"div\" className=\"relative z-50 lg:hidden\" onClose={onClose}>\n          <Transition.Child\n            as={Fragment}\n            enter=\"transition-opacity ease-linear duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"transition-opacity ease-linear duration-300\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <div className=\"fixed inset-0 bg-gray-900/80\" />\n          </Transition.Child>\n\n          <div className=\"fixed inset-0 flex\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"transition ease-in-out duration-300 transform\"\n              enterFrom=\"-translate-x-full\"\n              enterTo=\"translate-x-0\"\n              leave=\"transition ease-in-out duration-300 transform\"\n              leaveFrom=\"translate-x-0\"\n              leaveTo=\"-translate-x-full\"\n            >\n              <Dialog.Panel className=\"relative mr-16 flex w-full max-w-xs flex-1\">\n                <Transition.Child\n                  as={Fragment}\n                  enter=\"ease-in-out duration-300\"\n                  enterFrom=\"opacity-0\"\n                  enterTo=\"opacity-100\"\n                  leave=\"ease-in-out duration-300\"\n                  leaveFrom=\"opacity-100\"\n                  leaveTo=\"opacity-0\"\n                >\n                  <div className=\"absolute left-full top-0 flex w-16 justify-center pt-5\">\n                    <button type=\"button\" className=\"-m-2.5 p-2.5\" onClick={onClose}>\n                      <span className=\"sr-only\">Close sidebar</span>\n                      <XMarkIcon className=\"h-6 w-6 text-white\" aria-hidden=\"true\" />\n                    </button>\n                  </div>\n                </Transition.Child>\n                {/* Sidebar component, swap this element with another sidebar if you like */}\n                <div className=\"flex grow flex-col gap-y-5 overflow-y-auto bg-white px-6 pb-4\">\n                  <div className=\"flex h-16 shrink-0 items-center space-x-2\">\n                    <img className=\"h-8 w-auto\" src={mintCampusLogo} alt=\"MINT Campus\" />\n                    <img className=\"h-8 w-auto\" src={mintVernetztLogo} alt=\"MINT Vernetzt\" />\n                  </div>\n                  <nav className=\"flex flex-1 flex-col\">\n                    <ul className=\"-mx-2 space-y-1\">\n                      <li\n                        className={clsx(\n                          active === 'account' ? 'bg-[#252131] text-white hover:text-white' : 'text-gray-700 hover:text-white hover:bg-[#252131]',\n                          'cursor-pointer group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold'\n                        )}\n                      >\n                        <a href={url.accountUrl}>{msg('account')}</a>\n                      </li>\n                      {features.passwordUpdateSupported && (\n                        <li\n                          className={clsx(\n                            active === 'password' ? 'bg-[#252131] text-white hover:text-white' : 'text-gray-700 hover:text-white hover:bg-[#252131]',\n                            'cursor-pointer group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold'\n                          )}\n                        >\n                          <a href={url.passwordUrl}>{msg('password')}</a>\n                        </li>\n                      )}\n                      {/* <li\n                        className={clsx(\n                          active === 'totp' ? 'bg-[#252131] text-white hover:text-white' : 'text-gray-700 hover:text-white hover:bg-[#252131]',\n                          'cursor-pointer group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold'\n                        )}\n                      >\n                        <a href={url.totpUrl}>{msg('authenticator')}</a>\n                      </li>\n                      {features.identityFederation && (\n                        <li\n                          className={clsx(\n                            active === 'social' ? 'bg-[#252131] text-white hover:text-white' : 'text-gray-700 hover:text-white hover:bg-[#252131]',\n                            'cursor-pointer group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold'\n                          )}\n                        >\n                          <a href={url.socialUrl}>{msg('federatedIdentity')}</a>\n                        </li>\n                      )}\n                      <li\n                        className={clsx(\n                          active === 'sessions' ? 'bg-[#252131] text-white hover:text-white' : 'text-gray-700 hover:text-white hover:bg-[#252131]',\n                          'cursor-pointer group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold'\n                        )}\n                      >\n                        <a href={url.sessionsUrl}>{msg('sessions')}</a>\n                      </li>\n                      <li\n                        className={clsx(\n                          active === 'applications' ? 'bg-[#252131] text-white hover:text-white' : 'text-gray-700 hover:text-white hover:bg-[#252131]',\n                          'cursor-pointer group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold'\n                        )}\n                      >\n                        <a href={url.applicationsUrl}>{msg('applications')}</a>\n                      </li>\n                      {features.log && (\n                        <li\n                          className={clsx(\n                            active === 'log' ? 'bg-[#252131] text-white hover:text-white' : 'text-gray-700 hover:text-white hover:bg-[#252131]',\n                            'cursor-pointer group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold'\n                          )}\n                        >\n                          <a href={url.logUrl}>{msg('log')}</a>\n                        </li>\n                      )}\n                      {realm.userManagedAccessAllowed && features.authorization && (\n                        <li\n                          className={clsx(\n                            active === 'authorization' ? 'bg-[#252131] text-white hover:text-white' : 'text-gray-700 hover:text-white hover:bg-[#252131]',\n                            'cursor-pointer group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold'\n                          )}\n                        >\n                          <a href={url.resourceUrl}>{msg('myResources')}</a>\n                        </li>\n                      )} */}\n                    </ul>\n                  </nav>\n                </div>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </Dialog>\n      </Transition.Root>\n\n      {/* Static sidebar for desktop */}\n      <div className=\"hidden lg:fixed lg:inset-y-0 lg:z-50 lg:flex lg:w-72 lg:flex-col\">\n        {/* Sidebar component, swap this element with another sidebar if you like */}\n        <div className=\"flex grow flex-col gap-y-5 overflow-y-auto border-r border-gray-200 bg-white px-6 pb-4\">\n          <div className=\"flex h-16 shrink-0 items-center justify-center space-x-3\">\n            <img className=\"h-12 w-auto\" src={mintCampusLogo} alt=\"MINT Campus\" />\n            <img className=\"h-12 w-auto\" src={mintVernetztLogo} alt=\"MINT Vernetzt\" />\n          </div>\n          <nav className=\"flex flex-1 flex-col\">\n            <ul className=\"-mx-2 space-y-1\">\n              <li>\n                <a\n                  href={url.accountUrl}\n                  className={clsx(\n                    active === 'account' ? 'bg-[#252131] text-white hover:text-white' : 'text-gray-700 hover:text-white hover:bg-[#252131]',\n                    'cursor-pointer group flex gap-x-3 rounded-md p-2 text-base leading-6 font-semibold'\n                  )}\n                >\n                  {msg('account')}\n                </a>\n              </li>\n              {features.passwordUpdateSupported && (\n                <li\n                  className={clsx(\n                    active === 'password' ? 'bg-[#252131] text-white hover:text-white' : 'text-gray-700 hover:text-white hover:bg-[#252131]',\n                    'cursor-pointer group flex gap-x-3 rounded-md p-2 text-base leading-6 font-semibold'\n                  )}\n                >\n                  <a href={url.passwordUrl}>{msg('password')}</a>\n                </li>\n              )}\n              {/* <li\n                className={clsx(\n                  active === 'totp' ? 'bg-[#252131] text-white hover:text-white' : 'text-gray-700 hover:text-white hover:bg-[#252131]',\n                  'cursor-pointer group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold'\n                )}\n              >\n                <a href={url.totpUrl}>{msg('authenticator')}</a>\n              </li>\n              {features.identityFederation && (\n                <li\n                  className={clsx(\n                    active === 'social' ? 'bg-[#252131] text-white hover:text-white' : 'text-gray-700 hover:text-white hover:bg-[#252131]',\n                    'cursor-pointer group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold'\n                  )}\n                >\n                  <a href={url.socialUrl}>{msg('federatedIdentity')}</a>\n                </li>\n              )}\n              <li\n                className={clsx(\n                  active === 'sessions' ? 'bg-[#252131] text-white hover:text-white' : 'text-gray-700 hover:text-white hover:bg-[#252131]',\n                  'cursor-pointer group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold'\n                )}\n              >\n                <a href={url.sessionsUrl}>{msg('sessions')}</a>\n              </li>\n              <li\n                className={clsx(\n                  active === 'applications' ? 'bg-[#252131] text-white hover:text-white' : 'text-gray-700 hover:text-white hover:bg-[#252131]',\n                  'cursor-pointer group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold'\n                )}\n              >\n                <a href={url.applicationsUrl}>{msg('applications')}</a>\n              </li>\n              {features.log && (\n                <li\n                  className={clsx(\n                    active === 'log' ? 'bg-[#252131] text-white hover:text-white' : 'text-gray-700 hover:text-white hover:bg-[#252131]',\n                    'cursor-pointer group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold'\n                  )}\n                >\n                  <a href={url.logUrl}>{msg('log')}</a>\n                </li>\n              )}\n              {realm.userManagedAccessAllowed && features.authorization && (\n                <li\n                  className={clsx(\n                    active === 'authorization' ? 'bg-[#252131] text-white hover:text-white' : 'text-gray-700 hover:text-white hover:bg-[#252131]',\n                    'cursor-pointer group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold'\n                  )}\n                >\n                  <a href={url.resourceUrl}>{msg('myResources')}</a>\n                </li>\n              )} */}\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </>\n  )\n}\n","// Copy pasted from: https://github.com/InseeFrLab/keycloakify/blob/main/src/login/Template.tsx\n\nimport { clsx } from 'keycloakify/tools/clsx'\nimport { usePrepareTemplate } from 'keycloakify/lib/usePrepareTemplate'\nimport type { TemplateProps } from 'keycloakify/account/TemplateProps'\nimport { useGetClassName } from 'keycloakify/account/lib/useGetClassName'\nimport type { KcContext } from './kcContext'\nimport type { I18n } from './i18n'\nimport { lazy, useState } from 'react'\nimport { Bars3Icon } from '@heroicons/react/24/outline'\nimport { CheckCircleIcon, XCircleIcon } from '@heroicons/react/20/solid'\nimport Sidebar from './components/Sidebar'\n\nconst Header = lazy(() => import('./components/Header'))\n\nexport default function Template(props: TemplateProps<KcContext, I18n>) {\n  const { kcContext, i18n, doUseDefaultCss, active, classes, children } = props\n\n  const { getClassName } = useGetClassName({ doUseDefaultCss, classes })\n\n  const { url, message } = kcContext\n\n  const { isReady } = usePrepareTemplate({\n    doFetchDefaultThemeResources: doUseDefaultCss,\n    url,\n    // \"stylesCommon\": [\"node_modules/patternfly/dist/css/patternfly.min.css\", \"node_modules/patternfly/dist/css/patternfly-additions.min.css\"],\n    styles: ['css/account.css'],\n    htmlClassName: undefined,\n    bodyClassName: clsx('admin-console', 'user', getClassName('kcBodyClass')),\n  })\n\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n\n  if (!isReady) {\n    return null\n  }\n\n  return (\n    <div>\n      <Sidebar active={active} i18n={i18n} kcContext={kcContext} onClose={() => setSidebarOpen(false)} open={sidebarOpen} />\n      <div className=\"lg:pl-72\">\n        <div className=\"sticky top-0 z-40 flex h-16 shrink-0 items-center gap-x-4 border-b border-gray-200 bg-white px-4 shadow-sm sm:gap-x-6 sm:px-6 lg:px-8\">\n          <button type=\"button\" className=\"-m-2.5 p-2.5 text-gray-700 lg:hidden\" onClick={() => setSidebarOpen(true)}>\n            <span className=\"sr-only\">Open sidebar</span>\n            <Bars3Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n          </button>\n          <Header i18n={i18n} kcContext={kcContext} />\n        </div>\n\n        <main className=\"py-10\">\n          <div className=\"px-4 sm:px-6 lg:px-8\">\n            {message !== undefined && (\n              <div className={clsx('rounded-md p-4 mb-5', { 'bg-green-50': message.type === 'success', 'bg-red-50': message.type === 'error' })}>\n                <div className=\"flex\">\n                  <div className=\"flex-shrink-0\">\n                    {message.type === 'success' && <CheckCircleIcon className=\"h-5 w-5 text-green-400\" aria-hidden=\"true\" />}\n                    {message.type === 'error' && <XCircleIcon className=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />}\n                  </div>\n                  <div className=\"ml-3\">\n                    <p className={clsx('text-sm font-medium', { 'text-green-800': message.type === 'success', 'text-red-800': message.type === 'error' })}>\n                      {message.summary}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            )}\n            {children}\n          </div>\n        </main>\n      </div>\n    </div>\n  )\n}\n"],"names":["Sidebar","props","active","i18n","kcContext","onClose","open","url","features","msg","realm","_jsxs","_Fragment","children","_jsx","Transition","show","as","Fragment","Dialog","className","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","type","onClick","XMarkIcon","src","mintCampusLogo","alt","mintVernetztLogo","clsx","href","accountUrl","passwordUpdateSupported","passwordUrl","Header","lazy","Template","doUseDefaultCss","classes","getClassName","useGetClassName","message","isReady","usePrepareTemplate","doFetchDefaultThemeResources","styles","htmlClassName","undefined","bodyClassName","_useState","useState","_useState2","_slicedToArray","sidebarOpen","setSidebarOpen","Bars3Icon","CheckCircleIcon","XCircleIcon","summary"],"sourceRoot":""}