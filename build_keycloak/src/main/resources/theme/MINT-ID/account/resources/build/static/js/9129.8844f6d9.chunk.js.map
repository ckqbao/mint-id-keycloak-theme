{"version":3,"file":"static/js/9129.8844f6d9.chunk.js","mappings":"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","sources":["login/pages/Register.tsx","../node_modules/keycloakify/src/lib/useGetClassName.ts","../node_modules/keycloakify/src/login/lib/useGetClassName.ts","../node_modules/keycloakify/src/tools/clsx.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/tsafe/src/typeGuard.ts"],"sourcesContent":["// ejected using 'npx eject-keycloak-page'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { clsx } from 'keycloakify/tools/clsx'\nimport type { PageProps } from 'keycloakify/login/pages/PageProps'\nimport { useGetClassName } from 'keycloakify/login/lib/useGetClassName'\nimport { SubmitHandler, useForm } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport * as yup from 'yup'\n\nimport type { KcContext } from '../kcContext'\nimport type { I18n } from '../i18n'\n\nexport default function Register(props: PageProps<Extract<KcContext, { pageId: 'register.ftl' }>, I18n>) {\n  const { kcContext, i18n, doUseDefaultCss, Template, classes } = props\n\n  const agreementLabelRef = useRef(null)\n\n  const [agreementChecked, setAgreementChecked] = useState(false)\n\n  const { getClassName } = useGetClassName({\n    doUseDefaultCss,\n    classes,\n  })\n\n  const { url, messagesPerField, register, realm, passwordRequired, recaptchaRequired, recaptchaSiteKey } = kcContext\n\n  const { msg, msgStr } = i18n\n  const { registrationEmailAsUsername } = realm\n\n  const schema = useMemo(\n    () =>\n      yup.object({\n        firstName: yup.string().required(msgStr('error-empty')),\n        lastName: yup.string().required(msgStr('error-empty')),\n        email: yup.string().email(msgStr('error-invalid-email')).required(msgStr('error-empty')),\n        username: registrationEmailAsUsername ? yup.string() : yup.string().required(msgStr('error-empty')),\n        password: yup.string().required(msgStr('error-empty')),\n        'password-confirm': yup\n          .string()\n          .required(msgStr('error-empty'))\n          .oneOf([yup.ref('password')], 'Your passwords do not match.'),\n      }),\n    [registrationEmailAsUsername]\n  )\n\n  const {\n    formState: { errors, isDirty },\n    handleSubmit,\n    register: registerField,\n    unregister: unregisterField,\n  } = useForm({\n    defaultValues: {\n      firstName: register.formData.firstName ?? '',\n      lastName: register.formData.lastName ?? '',\n      email: register.formData.email ?? '',\n      password: '',\n      'password-confirm': '',\n    },\n    resolver: yupResolver(schema),\n  })\n\n  useEffect(() => {\n    const observer = new MutationObserver((mutations, mutationInstance) => {\n      const termsOfUseLink = document.querySelector<HTMLAnchorElement>('a#terms-of-use')\n      const mintIdPrivacyPolicy = document.querySelector<HTMLAnchorElement>('a#MINT-ID-privacy-policy')\n      const mintCampusPrivacyPolicy = document.querySelector<HTMLAnchorElement>('a#MINTcampus-privacy-policy')\n      const mintVernetztPrivacyPolicy = document.querySelector<HTMLAnchorElement>('a#MINTvernetzt-privacy-policy')\n      if (termsOfUseLink && mintIdPrivacyPolicy && mintCampusPrivacyPolicy && mintVernetztPrivacyPolicy) {\n        termsOfUseLink.setAttribute('href', '/nutzungsbedingungen')\n        termsOfUseLink.setAttribute('target', '_blank')\n        termsOfUseLink.style.color = '#252131'\n        termsOfUseLink.style.fontWeight = 'bold'\n        termsOfUseLink.style.textDecoration = 'underline'\n        termsOfUseLink.innerHTML = msgStr('termsTitle')\n\n        mintIdPrivacyPolicy.setAttribute('href', '/datenschutz')\n        mintIdPrivacyPolicy.setAttribute('target', '_blank')\n        mintIdPrivacyPolicy.style.color = '#252131'\n        mintIdPrivacyPolicy.style.fontWeight = 'bold'\n        mintIdPrivacyPolicy.style.textDecoration = 'underline'\n        mintIdPrivacyPolicy.innerHTML = msgStr('mintIdPrivacyPolicyTitle')\n\n        mintCampusPrivacyPolicy.setAttribute('href', '/datenschutzerklaerung')\n        mintCampusPrivacyPolicy.setAttribute('target', '_blank')\n        mintCampusPrivacyPolicy.style.color = '#252131'\n        mintCampusPrivacyPolicy.style.fontWeight = 'bold'\n        mintCampusPrivacyPolicy.style.textDecoration = 'underline'\n        mintCampusPrivacyPolicy.innerHTML = msgStr('mintCampusPrivacyPolicyTitle')\n\n        mintVernetztPrivacyPolicy.setAttribute('href', '/privacy-policy-community-platform')\n        mintVernetztPrivacyPolicy.setAttribute('target', '_blank')\n        mintVernetztPrivacyPolicy.style.color = '#252131'\n        mintVernetztPrivacyPolicy.style.fontWeight = 'bold'\n        mintVernetztPrivacyPolicy.style.textDecoration = 'underline'\n        mintVernetztPrivacyPolicy.innerHTML = msgStr('mintVernetztPrivacyPolicyTitle')\n\n        mutationInstance.disconnect()\n      }\n    })\n    observer.observe(document, {\n      attributes: true,\n      childList: true,\n      subtree: true,\n    })\n\n    document.body.classList.add('register')\n\n    return () => {\n      observer.disconnect()\n      document.body.classList.remove('register')\n    }\n  }, [])\n\n  useEffect(() => {\n    if (!registrationEmailAsUsername) {\n      registerField('username')\n    } else {\n      unregisterField('username')\n    }\n  }, [registrationEmailAsUsername, registerField, unregisterField])\n\n  const submit: SubmitHandler<yup.InferType<typeof schema>> = (_values, event) => {\n    event?.target.submit()\n  }\n\n  return (\n    <Template\n      {...{ kcContext, i18n, doUseDefaultCss, classes }}\n      displayInfo\n      headerNode={msg('registerTitle')}\n      infoNode={\n        <div id=\"back-to-login\" className='flex items-center justify-center !p-0'>\n          <span className='text-lg'>\n            {msg('alreadyHaveAccount')}\n            <a className=\"ml-2\" href={url.loginUrl}>\n              {msg('doLogIn')}\n            </a>\n          </span>\n        </div>\n      }\n    >\n      <form id=\"kc-register-form\" className={getClassName('kcFormClass')} onSubmit={handleSubmit(submit)} action={url.registrationAction} method=\"post\">\n        <div\n          className={clsx(getClassName('kcFormGroupClass'), messagesPerField.printIfExists('firstName', getClassName('kcFormGroupErrorClass')), {\n            [getClassName('kcFormGroupErrorClass')]: !!errors.firstName,\n          })}\n        >\n          <div className={getClassName('kcInputWrapperClass')}>\n            <input\n              {...registerField('firstName')}\n              type=\"text\"\n              id=\"firstName\"\n              className={clsx(getClassName('kcInputClass'), 'w-full')}\n              placeholder={msgStr('firstName') + '*'}\n            />\n          </div>\n        </div>\n\n        <div\n          className={clsx(getClassName('kcFormGroupClass'), messagesPerField.printIfExists('lastName', getClassName('kcFormGroupErrorClass')), {\n            [getClassName('kcFormGroupErrorClass')]: !!errors.lastName,\n          })}\n        >\n          <div className={getClassName('kcInputWrapperClass')}>\n            <input\n              {...registerField('lastName')}\n              type=\"text\"\n              id=\"lastName\"\n              className={clsx(getClassName('kcInputClass'), 'w-full')}\n              placeholder={msgStr('lastName') + '*'}\n            />\n          </div>\n        </div>\n        <div\n          className={clsx(getClassName('kcFormGroupClass'), messagesPerField.printIfExists('email', getClassName('kcFormGroupErrorClass')), {\n            [getClassName('kcFormGroupErrorClass')]: !!errors.email,\n          })}\n        >\n          <div className={getClassName('kcInputWrapperClass')}>\n            <input\n              {...registerField('email')}\n              type=\"text\"\n              id=\"email\"\n              className={clsx(getClassName('kcInputClass'), 'w-full')}\n              autoComplete=\"email\"\n              placeholder={msgStr('email') + '*'}\n            />\n          </div>\n        </div>\n        {!realm.registrationEmailAsUsername && (\n          <div\n            className={clsx(getClassName('kcFormGroupClass'), messagesPerField.printIfExists('username', getClassName('kcFormGroupErrorClass')), {\n              [getClassName('kcFormGroupErrorClass')]: !!errors.username,\n            })}\n          >\n            <div className={getClassName('kcInputWrapperClass')}>\n              <input\n                {...registerField('username')}\n                type=\"text\"\n                id=\"username\"\n                className={clsx(getClassName('kcInputClass'), 'w-full')}\n                name=\"username\"\n                defaultValue={register.formData.username ?? ''}\n                autoComplete=\"username\"\n                placeholder={msgStr('username') + '*'}\n              />\n            </div>\n          </div>\n        )}\n        {passwordRequired && (\n          <>\n            <div\n              className={clsx(getClassName('kcFormGroupClass'), messagesPerField.printIfExists('password', getClassName('kcFormGroupErrorClass')), {\n                [getClassName('kcFormGroupErrorClass')]: !!errors.password,\n              })}\n            >\n              <div className={getClassName('kcInputWrapperClass')}>\n                <input\n                  {...registerField('password')}\n                  type=\"password\"\n                  id=\"password\"\n                  className={clsx(getClassName('kcInputClass'), 'w-full')}\n                  autoComplete=\"new-password\"\n                  placeholder={msgStr('password') + '*'}\n                />\n              </div>\n            </div>\n\n            <div\n              className={clsx(getClassName('kcFormGroupClass'), messagesPerField.printIfExists('password-confirm', getClassName('kcFormGroupErrorClass')), {\n                [getClassName('kcFormGroupErrorClass')]: !!errors['password-confirm'],\n              })}\n            >\n              <div className={getClassName('kcInputWrapperClass')}>\n                <input\n                  {...registerField('password-confirm')}\n                  type=\"password\"\n                  id=\"password-confirm\"\n                  className={clsx(getClassName('kcInputClass'), 'w-full')}\n                  placeholder={msgStr('passwordConfirm') + '*'}\n                />\n              </div>\n            </div>\n          </>\n        )}\n        <div className={getClassName('kcFormGroupClass')}>\n          <div className={getClassName('kcInputWrapperClass')}>\n            <div id=\"kc-agreement\">\n              <div>\n                <input\n                  id=\"agreement\"\n                  name=\"agreement\"\n                  type=\"checkbox\"\n                  checked={agreementChecked}\n                  onChange={(event) => setAgreementChecked(event.target.checked)}\n                  required={isDirty && !Object.keys(errors).length}\n                />\n              </div>\n              <div>\n                <label ref={agreementLabelRef} htmlFor=\"agreement\">\n                  * {msg('registerTermsAgreement')} {msg('registerPrivacyPolicyAgreement')}\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n        {recaptchaRequired && (\n          <div className=\"form-group\">\n            <div className={getClassName('kcInputWrapperClass')}>\n              <div className=\"g-recaptcha\" data-size=\"compact\" data-sitekey={recaptchaSiteKey}></div>\n            </div>\n          </div>\n        )}\n        {!!Object.keys(errors).length && (\n          <div className=\"kcFormError\">\n            {errors.firstName?.message ??\n              errors.lastName?.message ??\n              errors.email?.message ??\n              errors.password?.message ??\n              errors['password-confirm']?.message ??\n              ''}\n          </div>\n        )}\n        <div className={getClassName('kcFormGroupClass')}>\n          <div id=\"kc-form-buttons\" className={getClassName('kcFormButtonsClass')}>\n            <button className={clsx(getClassName('kcButtonClass'), getClassName('kcButtonPrimaryClass'))} id=\"kc-register\" type=\"submit\">\n              {msgStr('doRegister')}\n            </button>\n            <button className={clsx(getClassName('kcButtonClass'), getClassName('kcButtonDefaultClass'))} onClick={() => window.history.back()}>\n              {msgStr('doCancel')}\n            </button>\n          </div>\n        </div>\n      </form>\n    </Template>\n  )\n}\n","import { clsx } from \"keycloakify/tools/clsx\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\n\nexport function createUseClassName<ClassKey extends string>(params: { defaultClasses: Record<ClassKey, string | undefined> }) {\n    const { defaultClasses } = params;\n\n    function useGetClassName(params: { doUseDefaultCss: boolean; classes: Partial<Record<ClassKey, string>> | undefined }) {\n        const { classes } = params;\n\n        const getClassName = useConstCallback((classKey: ClassKey): string => {\n            return clsx(classKey, defaultClasses[classKey], classes?.[classKey]);\n        });\n\n        return { getClassName };\n    }\n\n    return { useGetClassName };\n}\n","import { createUseClassName } from \"keycloakify/lib/useGetClassName\";\nimport type { ClassKey } from \"keycloakify/login/TemplateProps\";\n\nexport const { useGetClassName } = createUseClassName<ClassKey>({\n    \"defaultClasses\": {\n        \"kcHtmlClass\": \"login-pf\",\n        \"kcLoginClass\": \"login-pf-page\",\n        \"kcContentWrapperClass\": \"row\",\n        \"kcHeaderClass\": \"login-pf-page-header\",\n        \"kcHeaderWrapperClass\": undefined,\n        \"kcFormCardClass\": \"card-pf\",\n        \"kcFormCardAccountClass\": \"login-pf-accounts\",\n        \"kcFormSocialAccountClass\": \"login-pf-social-section\",\n        \"kcFormSocialAccountContentClass\": \"col-xs-12 col-sm-6\",\n        \"kcFormHeaderClass\": \"login-pf-header\",\n        \"kcLocaleWrapperClass\": undefined,\n        \"kcFeedbackErrorIcon\": \"pficon pficon-error-circle-o\",\n        \"kcFeedbackWarningIcon\": \"pficon pficon-warning-triangle-o\",\n        \"kcFeedbackSuccessIcon\": \"pficon pficon-ok\",\n        \"kcFeedbackInfoIcon\": \"pficon pficon-info\",\n        \"kcResetFlowIcon\": \"pficon pficon-arrow fa-2x\",\n        \"kcFormGroupClass\": \"form-group\",\n        \"kcLabelWrapperClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcSignUpClass\": \"login-pf-signup\",\n        \"kcInfoAreaWrapperClass\": undefined,\n\n        \"kcLogoClass\": \"login-pf-brand\",\n        \"kcContainerClass\": \"container-fluid\",\n        \"kcContentClass\": \"col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 col-lg-6 col-lg-offset-3\",\n        \"kcFeedbackAreaClass\": \"col-md-12\",\n        \"kcLocaleClass\": \"col-xs-12 col-sm-1\",\n        \"kcAlertIconClasserror\": \"pficon pficon-error-circle-o\",\n\n        \"kcFormAreaClass\": \"col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2 col-lg-8 col-lg-offset-2\",\n        \"kcFormSocialAccountListClass\": \"login-pf-social list-unstyled login-pf-social-all\",\n        \"kcFormSocialAccountDoubleListClass\": \"login-pf-social-double-col\",\n        \"kcFormSocialAccountListLinkClass\": \"login-pf-social-link\",\n        \"kcWebAuthnKeyIcon\": \"pficon pficon-key\",\n        \"kcWebAuthnDefaultIcon\": \"pficon pficon-key\",\n\n        \"kcFormClass\": \"form-horizontal\",\n        \"kcFormGroupErrorClass\": \"has-error\",\n        \"kcLabelClass\": \"control-label\",\n        \"kcInputClass\": \"form-control\",\n        \"kcInputErrorMessageClass\": \"pf-c-form__helper-text pf-m-error required kc-feedback-text\",\n        \"kcInputWrapperClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormOptionsClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormButtonsClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormSettingClass\": \"login-pf-settings\",\n        \"kcTextareaClass\": \"form-control\",\n\n        \"kcInfoAreaClass\": \"col-xs-12 col-sm-4 col-md-4 col-lg-5 details\",\n\n        // user-profile grouping\n        \"kcFormGroupHeader\": \"pf-c-form__group\",\n\n        // css classes for form buttons main class used for all buttons\n        \"kcButtonClass\": \"btn\",\n        // classes defining priority of the button - primary or default (there is typically only one priority button for the form)\n        \"kcButtonPrimaryClass\": \"btn-primary\",\n        \"kcButtonDefaultClass\": \"btn-default\",\n        // classes defining size of the button\n        \"kcButtonLargeClass\": \"btn-lg\",\n        \"kcButtonBlockClass\": \"btn-block\",\n\n        // css classes for input\n        \"kcInputLargeClass\": \"input-lg\",\n\n        // css classes for form accessability\n        \"kcSrOnlyClass\": \"sr-only\",\n\n        // css classes for select-authenticator form\n        \"kcSelectAuthListClass\": \"list-group list-view-pf\",\n        \"kcSelectAuthListItemClass\": \"list-group-item list-view-pf-stacked\",\n        \"kcSelectAuthListItemFillClass\": \"pf-l-split__item pf-m-fill\",\n        \"kcSelectAuthListItemIconPropertyClass\": \"fa-2x select-auth-box-icon-properties\",\n        \"kcSelectAuthListItemIconClass\": \"pf-l-split__item select-auth-box-icon\",\n        \"kcSelectAuthListItemTitle\": \"select-auth-box-paragraph\",\n        \"kcSelectAuthListItemInfoClass\": \"list-view-pf-main-info\",\n        \"kcSelectAuthListItemLeftClass\": \"list-view-pf-left\",\n        \"kcSelectAuthListItemBodyClass\": \"list-view-pf-body\",\n        \"kcSelectAuthListItemDescriptionClass\": \"list-view-pf-description\",\n        \"kcSelectAuthListItemHeadingClass\": \"list-group-item-heading\",\n        \"kcSelectAuthListItemHelpTextClass\": \"list-group-item-text\",\n\n        // css classes for the authenticators\n        \"kcAuthenticatorDefaultClass\": \"fa list-view-pf-icon-lg\",\n        \"kcAuthenticatorPasswordClass\": \"fa fa-unlock list-view-pf-icon-lg\",\n        \"kcAuthenticatorOTPClass\": \"fa fa-mobile list-view-pf-icon-lg\",\n        \"kcAuthenticatorWebAuthnClass\": \"fa fa-key list-view-pf-icon-lg\",\n        \"kcAuthenticatorWebAuthnPasswordlessClass\": \"fa fa-key list-view-pf-icon-lg\",\n\n        //css classes for the OTP Login Form\n        \"kcSelectOTPListClass\": \"card-pf card-pf-view card-pf-view-select card-pf-view-single-select\",\n        \"kcSelectOTPListItemClass\": \"card-pf-body card-pf-top-element\",\n        \"kcAuthenticatorOtpCircleClass\": \"fa fa-mobile card-pf-icon-circle\",\n        \"kcSelectOTPItemHeadingClass\": \"card-pf-title text-center\",\n        \"kcFormOptionsWrapperClass\": undefined\n    }\n});\n","import { assert } from \"tsafe/assert\";\nimport { typeGuard } from \"tsafe/typeGuard\";\n\nexport type CxArg = undefined | null | string | boolean | Partial<Record<string, boolean | null | undefined>> | readonly CxArg[];\n\nexport const clsx = (...args: CxArg[]): string => {\n    const len = args.length;\n    let i = 0;\n    let cls = \"\";\n    for (; i < len; i++) {\n        const arg = args[i];\n        if (arg == null) continue;\n\n        let toAdd;\n        switch (typeof arg) {\n            case \"boolean\":\n                break;\n            case \"object\": {\n                if (Array.isArray(arg)) {\n                    toAdd = clsx(...arg);\n                } else {\n                    assert(!typeGuard<{ length: number }>(arg, false));\n\n                    toAdd = \"\";\n                    for (const k in arg) {\n                        if (arg[k as string] && k) {\n                            toAdd && (toAdd += \" \");\n                            toAdd += k;\n                        }\n                    }\n                }\n                break;\n            }\n            default: {\n                toAdd = arg;\n            }\n        }\n        if (toAdd) {\n            cls && (cls += \" \");\n            cls += toAdd;\n        }\n    }\n    return cls;\n};\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/** https://docs.tsafe.dev/typeguard */\nexport function typeGuard<T>(_value: any, isMatched: boolean): _value is T {\n    return isMatched;\n}\n"],"names":["Register","props","_register$formData$fi","_register$formData$la","_register$formData$em","_register$formData$us","_ref","_ref2","_ref3","_ref4","_errors$firstName$mes","_errors$firstName","_errors$lastName","_errors$email","_errors$password","_errors$passwordConf","kcContext","i18n","doUseDefaultCss","Template","classes","agreementLabelRef","useRef","_useState","useState","_useState2","_slicedToArray","agreementChecked","setAgreementChecked","getClassName","useGetClassName","url","messagesPerField","register","realm","passwordRequired","recaptchaRequired","recaptchaSiteKey","msg","msgStr","registrationEmailAsUsername","schema","useMemo","yup","firstName","required","lastName","email","username","password","oneOf","_useForm","useForm","defaultValues","formData","resolver","yupResolver","_useForm$formState","formState","errors","isDirty","handleSubmit","registerField","unregisterField","unregister","useEffect","observer","MutationObserver","mutations","mutationInstance","termsOfUseLink","document","querySelector","mintIdPrivacyPolicy","mintCampusPrivacyPolicy","mintVernetztPrivacyPolicy","setAttribute","style","color","fontWeight","textDecoration","innerHTML","disconnect","observe","attributes","childList","subtree","body","classList","add","remove","_jsx","displayInfo","headerNode","infoNode","id","className","children","_jsxs","href","loginUrl","onSubmit","_values","event","target","submit","action","registrationAction","method","clsx","printIfExists","_defineProperty","_objectSpread","type","placeholder","autoComplete","name","defaultValue","_Fragment","checked","onChange","Object","keys","length","ref","htmlFor","message","onClick","window","history","back","createUseClassName","params","defaultClasses","useConstCallback","classKey","undefined","len","arguments","i","cls","arg","toAdd","Array","isArray","apply","_toConsumableArray","k","assert","typeGuard","obj","key","value","defineProperty","enumerable","configurable","writable","_toPropertyKey","input","hint","prim","Symbol","toPrimitive","res","call","TypeError","String","Number","_value","isMatched"],"sourceRoot":""}